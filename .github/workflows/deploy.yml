name: Deploy
on:
  workflow_dispatch:
  push:
    branches:
      - dev  # 변경된 브랜치 이름 사용

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: project/toyland

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run UnitTest
        run: ./gradlew test --fail-fast
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          OPENAI_MODEL: ${{ secrets.OPENAI_MODEL }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: AWS IAM 사용자 설정
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_3 }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_3 }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Run Gradle Build
        run: ./gradlew build

      - name: Build and Push Docker Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST_3 }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY_3 }}
          script: |
            set -e  # 오류 발생 시 스크립트 중단
            
            # 최신 docker-compose.yml을 시크릿에서 적용
            cd ~/deploy
            rm -rf docker-compose.yml
            echo '${{ secrets.DOCKER_COMPOSE_YML }}' > docker-compose.yml
            
            # 최신 ECR 이미지 pull
            docker pull ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
            
            # 실행 중인 컨테이너 중지 및 제거
            docker-compose down
            
            # docker-compose 실행
            docker-compose up -d
